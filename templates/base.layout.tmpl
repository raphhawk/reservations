{{define "base"}}
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8" />
			<meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"/>
			<meta http-equiv="X-UA-Compatible" content="ie=edge"/>
			<title>Document</title>
			<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT" crossorigin="anonymous">
			<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/css/datepicker-bs5.min.css">
			<link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
			<link rel="stylesheet" type="text/css" href="/static/css/styles.css">
		</head>		
		<body>
			<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
				<div class="container-fluid">
					<a class="navbar-brand" href="#">Navbar</a>

					<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
						<span class="navbar-toggler-icon"></span>
					</button>

					<div class="collapse navbar-collapse" id="navbarSupportedContent">
						<ul class="navbar-nav me-auto mb-2 mb-lg-0">

							<li class="nav-item active">
								<a class="nav-link active" aria-current="page" href="/">Home <!--<span class="sr-only">(current)</span>--></a>
							</li>

							<li class="nav-item">
								<a class="nav-link" href="/about">About</a>
							</li>

							<li class="nav-item dropdown">
								<a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">Rooms</a>
								<ul class="dropdown-menu">
									<li><a class="dropdown-item" href="/ja-de">Japanese Delight</a></li>
									<li><a class="dropdown-item" href="/ke-ba">Kerala's Backwaters</a></li>
								</ul>
							</li>

							<li class="nav-item">
								<a class="nav-link" role="button" href="/search-availablity">Book Now</a>
							</li>

							<li class="nav-item">
								<a class="nav-link" role="button" href="/contact">Contacts</a>
							</li>

						</ul>
					</div>
				</div>
			</nav>
			
			{{block "content" .}}		
			{{end}}

			<div class="row my-footer">
				<div class="col">
					Left
				</div>
				<div class="col">
					Middle
				</div>
				<div class="col">
					Right
				</div>
			</div>

			<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js" integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3" crossorigin="anonymous"></script>
			<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.min.js" integrity="sha384-7VPbUDkoPSGFnVtYi0QogXtr74QeVeeIs99Qfg5YCF+TidwNdjvaKZX19NZ/e6oz" crossorigin="anonymous"></script>
			<script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.2.0/dist/js/datepicker-full.min.js"></script>
			<script src="https://unpkg.com/notie"></script>
			<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

			{{block "js" .}}		
			{{end}}

			<script>

let attention = prompt();

(() => {
	'use strict'

	// Fetch all the forms we want to apply custom Bootstrap validation styles to
	const forms = document.querySelectorAll('.needs-validation');

	// Loop over them and prevent submission
	Array.from(forms).forEach(form => {
		form.addEventListener('submit', event => {
			if (!form.checkValidity()) {
				event.preventDefault();
				event.stopPropagation();
			}
			form.classList.add('was-validated');
		}, false);
	})
})();


function notify(msg, msgType){
	notie.alert({
		type: msgType,
		text: msg,
	})
}

function notifyModal(title, text, icon, confirmButtonText){
	Swal.fire({
		title: title,
		html: text,
		icon: icon, 
		confirmButtonText: confirmButtonText
	});
}
function prompt(){

	let x = document.getElementById("reservation-dates");
	console.log(x);

	let success = (c)=>{
		const {
			msg = "",
			title = "",
			footer = "",
		} = c;

		Swal.fire({
			text: msg,
			title: title,
			icon: "success",
			footer: footer, 
		});
	}

	let error = (c)=>{
		const {
			msg = "",
			title = "",
			footer = "",
		} = c;

		Swal.fire({
			text: msg,
			title: title,
			icon: "error",
			footer: footer, 
		});
	}


	let toast = (c)=>{
		const {
			msg = "",
			icon = "success",
			position = "top-end"
		} = c;

		const Toast = Swal.mixin({
			toast: true,
			title: msg,
			icon: icon,
			position: position,
			showConfirmButton: false,
			timer: 3000,
			timerProgressBar: true,
			didOpen: (toast) => {
				toast.addEventListener('mouseenter', Swal.stopTimer);
				toast.addEventListener('mouseleave', Swal.resumeTimer);
			}
		});

		Toast.fire({});
	}

	async function dateViewer(c){
		const {
			msg = "",
			title = "",
		} = c;

		const {value: result} = await Swal.fire({
			title: title,
			html: msg, 
			showCancelButton: true,
			backdrop: false,
			focusConfirm: false,
			willOpen: ()=>{
				const elem = document.getElementById("reservation-dates-modal");
				const rp = new DateRangePicker(elem, {
					format: "yyyy-mm-dd",
					orientation: "top",
					showOnFocus: true,
				})
			},
			preConfirm: () => {
				return [
					document.getElementById('start').value,
					document.getElementById('end').value
				]
			},
			didOpen: ()=>{
				document.getElementById('start').removeAttribute("disabled");
				document.getElementById('end').removeAttribute("disabled");
			}
		})

		if (result) {
			if (result.dismiss !== Swal.DismissReason.cancel) {
				if (result.value !== ""){
					if (c.callback != undefined) {
						c.callback(result);
					}
				} else {
					c.callback(false);
				}
			} else {
				c.callback(false);
			}
		}
	}

	return{
		success: success,
		error : error,
		toast: toast,
		dateViewer: dateViewer,
	}
}
			</script>

		</body>
	</html>
{{end}}
